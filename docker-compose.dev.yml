services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: pencraft_user
      POSTGRES_PASSWORD: pencraft_password
      POSTGRES_DB: pencraft_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pencraft_user -d pencraft_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://pencraft_user:pencraft_password@db:5432/pencraft_db
      - JWT_SECRET=development-jwt-secret-key
      - PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/prisma:/app/prisma:ro

  # Frontend Service (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0
    ports:
      - "3000:5173"
    depends_on:
      - backend
    environment:
      - VITE_BACKEND_URL=http://localhost:8080
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
